"use strict";(self.webpackChunk_envio_ui_react=self.webpackChunk_envio_ui_react||[]).push([[2561],{"./src/stories/navigation/dropdown/dropdown.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dropdown_stories});var react=__webpack_require__("../../node_modules/react/index.js"),IconMenu2Outline=__webpack_require__("../icons/src/menu/outline/IconMenu2Outline.tsx"),components=__webpack_require__("./src/components/index.ts"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const DropdownExample=()=>{const[bookmarksChecked,setBookmarksChecked]=react.useState(!0),[urlsChecked,setUrlsChecked]=react.useState(!1),[person,setPerson]=react.useState("pedro");return(0,jsx_runtime.jsxs)(components.Lt,{children:[(0,jsx_runtime.jsx)(components.Lt.Trigger,{asChild:!0,children:(0,jsx_runtime.jsx)(components.zx,{icon:IconMenu2Outline.Z,iconSize:20,size:"sm",variant:"primary"})}),(0,jsx_runtime.jsx)(components.Lt.Portal,{children:(0,jsx_runtime.jsxs)(components.Lt.Content,{children:[(0,jsx_runtime.jsx)(components.Lt.Item,{children:"asdf"}),(0,jsx_runtime.jsx)(components.Lt.Item,{children:"asdf"}),(0,jsx_runtime.jsx)(components.Lt.Item,{disabled:!0,children:"asdf"}),(0,jsx_runtime.jsx)(components.Lt.Item,{children:"asdf"}),(0,jsx_runtime.jsx)(components.Lt.Separator,{}),(0,jsx_runtime.jsxs)(components.Lt.Sub,{children:[(0,jsx_runtime.jsx)(components.Lt.SubTrigger,{children:"More Tools"}),(0,jsx_runtime.jsx)(components.Lt.Portal,{children:(0,jsx_runtime.jsxs)(components.Lt.SubContent,{sideOffset:2,alignOffset:-5,children:[(0,jsx_runtime.jsx)(components.Lt.Item,{children:"asdf"}),(0,jsx_runtime.jsx)(components.Lt.Item,{disabled:!0,children:"asdf"}),(0,jsx_runtime.jsx)(components.Lt.Item,{children:"asdf"})]})})]}),(0,jsx_runtime.jsx)(components.Lt.Separator,{}),(0,jsx_runtime.jsx)(components.Lt.CheckboxItem,{checked:bookmarksChecked,onCheckedChange:setBookmarksChecked,children:"Show Bookmarks"}),(0,jsx_runtime.jsx)(components.Lt.CheckboxItem,{className:"DropdownCheckboxItem",checked:urlsChecked,onCheckedChange:setUrlsChecked,children:"Show Full URLs"}),(0,jsx_runtime.jsx)(components.Lt.Separator,{}),(0,jsx_runtime.jsx)(components.Lt.Label,{children:"People"}),(0,jsx_runtime.jsxs)(components.Lt.RadioGroup,{value:person,onValueChange:setPerson,children:[(0,jsx_runtime.jsx)(components.Lt.RadioItem,{value:"pedro",children:"Pedro Duarte"}),(0,jsx_runtime.jsx)(components.Lt.RadioItem,{value:"colm",children:"Colm Tuite"})]})]})})]})};var _Example$parameters,_Example$parameters2,_Example$parameters2$;DropdownExample.displayName="DropdownExample";const dropdown_stories={title:"Components/Navigation/Dropdown",component:DropdownExample,argTypes:{defaultOpen:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"-"}},description:"The open state of the dropdown menu when it is initially rendered. Use when you do not need to control its open state."},open:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"-"}},description:"The controlled open state of the dropdown menu. Must be used in conjunction with `onOpenChange`."},onOpenChange:{table:{type:{summary:"function",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when the open state of the dropdown menu changes."},modal:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"true"}},description:"The modality of the dropdown menu. When set to `true`, interaction with outside elements will be disabled and only menu content will be visible to screen readers."},dir:{table:{type:{summary:"ltr | rtl",detail:null},defaultValue:{summary:"-"}},description:"The reading direction of submenus when applicable. If omitted, inherits globally from `DirectionProvider` or assumes LTR (left-to-right) reading mode."},asChild:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"false"}},description:"Change the default rendered element for the one passed as a child, merging their props and behavior."},forceMount:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"-"}},description:"Used to force mounting when more control is needed. Useful when controlling animation with React animation libraries. If used on this part, it will be inherited by `Dropdown.Content` and `Dropdown.SubContent` respectively."},container:{table:{type:{summary:"React.ReactNode",detail:null},defaultValue:{summary:"-"}},description:"Specify a container element to portal the content into."},loop:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"-"}},description:"When `true`, keyboard navigation will loop from last item to first, and vice versa."},onCloseAutoFocus:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when focus moves to the trigger after closing. It can be prevented by calling `event.preventDefault`."},onEscapeKeyDown:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when the escape key is down. It can be prevented by calling `event.preventDefault`."},onPointerDownOutside:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when a pointer event occurs outside the bounds of the component. It can be prevented by calling `event.preventDefault`."},onFocusOutside:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when focus moves outside the bounds of the component. It can be prevented by calling `event.preventDefault`."},onInteractOutside:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when an interaction (pointer or focus event) happens outside the bounds of the component. It can be prevented by calling `event.preventDefault`."},side:{table:{type:{summary:"top | bottom | left | right",detail:null},defaultValue:{summary:"bottom"}},description:"The preferred side of the trigger to render against when open. Will be reversed when collisions occur and `avoidCollisions` is enabled."},sideOffset:{table:{type:{summary:"number",detail:null},defaultValue:{summary:0}},description:"The distance in pixels from the trigger."},align:{table:{type:{summary:"start | end | center",detail:null},defaultValue:{summary:"center"}},description:"The preferred alignment against the trigger. May change when collisions occur."},alignOffset:{table:{type:{summary:"number",detail:null},defaultValue:{summary:0}},description:"An offset in pixels from the `start` or `end` alignment options."},avoidCollisions:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:!0}},description:"When `true`, overrides the side and `align` preferences to prevent collisions with boundary edges."},collisionBoundary:{table:{type:{summary:"Element | null | Array<Element | null>",detail:null},defaultValue:{summary:[]}},description:"The element used as the collision boundary. By default this is the viewport, though you can provide additional element(s) to be included in this check."},collisionPadding:{table:{type:{summary:"number | Partial<Record<Side, number>>",detail:null},defaultValue:{summary:0}},description:"The distance in pixels from the boundary edges where collision detection should occur. Accepts a number (same for all sides), or a partial padding object, for example: `{ top: 20, left: 20 }`."},arrowPadding:{table:{type:{summary:"number",detail:null},defaultValue:{summary:0}},description:"The padding between the arrow and the edges of the content. If your content has `border-radius`, this will prevent it from overflowing the corners."},sticky:{table:{type:{summary:"partial | always",detail:null},defaultValue:{summary:"partial"}},description:"The sticky behavior on the align axis. `partial` will keep the content in the boundary as long as the trigger is at least partially in the boundary whilst `always` will keep the content in the boundary regardless."},hideWhenDetached:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:!0}},description:"Whether to hide the content when the trigger becomes fully occluded."},disabled:{table:{type:{summary:"boolean",detail:null},defaultValue:{summary:"-"}},description:"When true, prevents the user from interacting with the item."},onSelect:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when the user selects an item (via mouse or keyboard). Calling `event.preventDefault` in this handler will prevent the dropdown menu from closing when selecting that item."},textValue:{table:{type:{summary:"string",detail:null},defaultValue:{summary:"-"}},description:"Optional text used for typeahead purposes. By default the typeahead behavior will use the `.textContent` of the item. Use this when the content is complex, or you have non-textual content inside."},checked:{table:{type:{summary:"boolean | 'indeterminate'",detail:null},defaultValue:{summary:"-"}},description:"The controlled checked state of the item. Must be used in conjunction with `onCheckedChange`."},onCheckedChange:{table:{type:{summary:"function | (e: Event) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when the checked state changes."},values:{name:"value",type:{summary:"string",required:!0},table:{type:{summary:"string",detail:null},defaultValue:{summary:"-"}},description:"The value of the selected item in the group."},onValueChange:{table:{type:{summary:"function | (v: string) => void",detail:null},defaultValue:{summary:"-"}},description:"Event handler called when the value changes."}}},Example={};Example.parameters={...Example.parameters,docs:{...null===(_Example$parameters=Example.parameters)||void 0===_Example$parameters?void 0:_Example$parameters.docs,source:{originalSource:"{}",...null===(_Example$parameters2=Example.parameters)||void 0===_Example$parameters2||null===(_Example$parameters2$=_Example$parameters2.docs)||void 0===_Example$parameters2$?void 0:_Example$parameters2$.source}}};const __namedExportsOrder=["Example"]},"../icons/src/menu/outline/IconMenu2Outline.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../../node_modules/react/index.js");var _utils_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../icons/src/utils/types.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IconMenu2=({size,fill,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{width:size,height:size,viewBox:"0 0 24 24",fill:"none",...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M3.93526 6H20.0643C20.5793 6 21.0003 6.421 21.0003 6.936V7.064C21.0003 7.579 20.5793 8 20.0643 8H3.93526C3.42026 8 3.00026 7.579 3.00026 7.064V6.936C3.00026 6.421 3.42026 6 3.93526 6ZM4.99976 12C4.99976 12.553 4.55176 13 3.99976 13C3.44776 13 2.99976 12.553 2.99976 12C2.99976 11.447 3.44776 11 3.99976 11C4.55176 11 4.99976 11.447 4.99976 12ZM7.93526 11H20.0643C20.5793 11 21.0003 11.421 21.0003 11.936V12.064C21.0003 12.579 20.5793 13 20.0643 13H7.93526C7.42026 13 7.00026 12.579 7.00026 12.064V11.936C7.00026 11.421 7.42026 11 7.93526 11ZM20.0643 16H3.93526C3.42026 16 3.00026 16.421 3.00026 16.936V17.064C3.00026 17.579 3.42026 18 3.93526 18H20.0643C20.5793 18 21.0003 17.579 21.0003 17.064V16.936C21.0003 16.421 20.5793 16 20.0643 16Z",fill})});IconMenu2.displayName="IconMenu2",IconMenu2.defaultProps={..._utils_types__WEBPACK_IMPORTED_MODULE_2__.f};const __WEBPACK_DEFAULT_EXPORT__=IconMenu2;try{IconMenu2Outline.displayName="IconMenu2Outline",IconMenu2Outline.__docgenInfo={description:"",displayName:"IconMenu2Outline",props:{size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../icons/src/menu/outline/IconMenu2Outline.tsx#IconMenu2Outline"]={docgenInfo:IconMenu2Outline.__docgenInfo,name:"IconMenu2Outline",path:"../icons/src/menu/outline/IconMenu2Outline.tsx#IconMenu2Outline"})}catch(__react_docgen_typescript_loader_error){}}}]);